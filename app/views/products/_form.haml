- edit_view = locals[:action] == 'Edit'
- verb_and_product = (locals[:action] == 'Edit' ? 'Update' : 'Create') + ' Product'
- tel_input = mobile_device_is_iOS? ? 'tel' : 'text'

= form_for([@store, @product], |
          :html => { :class => 'mobile-form', |
                     :autocorrect => 'off', |
                     :autocapitalize => 'off' }) do |product_form|

  - if @product.errors.any?
    = render 'shared/form_errors', :target => @product

  %div
    %fieldset
      - if edit_view
        = product_form.label :name, (form_label(:name))
      = product_form.text_field :name, :placeholder => (form_label(:name))

    = product_form.fields_for(:instagram_tag) do |instagram_tag_form|
      %fieldset
        - instagram_tag_message = ' (e.g. #blue_jeans)'
        - instagram_tag_custom_label = form_label('Unique Instagram Hashtag',
                                                    true, instagram_tag_message)
        - instagram_value = edit_view ? "#{@product.get_instagram_tag(true)}" : nil
        - if edit_view
          = instagram_tag_form.label :instagram_tag, instagram_tag_custom_label
        = instagram_tag_form.text_field :instagram_tag, |
                                        :value => instagram_value, |
                                        :placeholder => instagram_tag_custom_label
        %span.inline-help
          *The Instagram Hashtag will be used to link photos from your feed with this product. For example, using #GramGoods will associate any photos from your Instagram feed with #GramGoods in their caption with this product.

    %fieldset
      - if edit_view
        = product_form.label :description, (form_label(:description))
      = product_form.text_area :description, |
                               :placeholder => (form_label(:description)),
                               :rows => 5

    %fieldset
      - price_label = (form_label(:price, true, ' (e.g. 9.99)'))
      - if edit_view
        = product_form.label :price, price_label
      = product_form.text_field :price, :type => 'text', |
                                :placeholder => price_label

    %fieldset
      - quantity_placeholder = form_label(:quantity, false)
      - quantity_disabled = @product.unlimited_quantity ? 'disabled' : nil
      - quantity_value = @product.quantity.nil? || @product.quantity == 0 ? nil : @product.quantity
      - if edit_view
        = product_form.label :quantity, (form_label(:quantity, false))
      = product_form.text_field :quantity, :type => tel_input, |
                                           :value => quantity_value, |
                                           :disabled => quantity_disabled, |
                                           :placeholder => quantity_placeholder

      %span.inline-help
        *Quantity is required unless Unlimited Quantity has been selected.
    %fieldset.checkbox
      = product_form.label :unlimited_quantity, |
        (form_label(:unlimited_quantity, false))
      = product_form.check_box :unlimited_quantity

    - color_placeholder = (form_label("#{:color}", false, ' - input and tap +'))
    - if edit_view
      = render 'products/nested_attribute_fieldset', |
        { :locals => { :attribute => 'color', |
          :collection => @product.colors, |
          :placeholder => color_placeholder }}
    - else
      = product_form.fields_for(:colors) do |colors_form|
        %fieldset
          = colors_form.text_field :color, :class => 'width-90', |
                                           :placeholder => color_placeholder
          %button.add-button{ :data => { :attribute => :color.to_s} } +
          %div.attrs

    - size_placeholder = (form_label("#{:size}", false, ' - input and tap +'))
    - if edit_view
      = render 'products/nested_attribute_fieldset', |
        { :locals => { :attribute => 'size', |
          :collection => @product.sizes ||= nil, |
          :placeholder => size_placeholder }}
    - else
      = product_form.fields_for(:sizes) do |sizes_form|
        %fieldset
          = sizes_form.text_field :size, :class => 'width-90', |
                                           :placeholder => size_placeholder
          %button.add-button{ :data => { :attribute => :size.to_s} } +
          %div.attrs

    %fieldset
      - flatrate_shipping_label = form_label('Flatrate Shipping Price', false, ' (e.g. 9.99)')
      - if edit_view
        = product_form.label :flatrate_shipping_cost, flatrate_shipping_label
      = product_form.text_field :flatrate_shipping_cost, |
                                :type => 'text',
                                :placeholder => flatrate_shipping_label

    #default_submit_buttons
      %fieldset
        = product_form.label :status, (form_label(:status))
        = product_form.select :status,
                              options_for_select(Product.order_status_array,
                                                 @product.status ||= 'Active')

      - if mobile_device_is_iOS?
        %fieldset
          = product_form.submit "#{verb_and_product} and Share on Instagram", |
            :name => 'post_to_instagram', :class => 'btn btn-large btn-primary'

        %fieldset
          %a#add_existing_photos.widget.btn.btn-large.btn-primary{ :href => 'javascript: void(0);' }
            Add Existing Photos - TODO

      - if !mobile_device_is_iOS? || edit_view
        %fieldset
          = product_form.submit verb_and_product, |
            :class => 'btn btn-large btn-primary'

    #existing_photo_grid_wrapper.widget.hide
      %fieldset
        #existing_photo_grid.widget
        %a#fetch_additional_existing_photos.widget.btn.btn-large.btn-primary{ :href => 'javascript: void(0);' }
          Load Additional Photos
        = product_form.submit verb_and_product, :class => 'btn btn-large btn-primary'
