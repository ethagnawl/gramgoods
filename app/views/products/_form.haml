- edit_view = locals[:action] == 'Edit'
- verb_and_product = (locals[:action] == 'Edit' ? 'Update' : 'Create') + ' Product'
- tel_input = mobile_device_is_iOS? ? 'tel' : 'text'

= form_for([@store, @product], |
          :html => { :class => 'mobile-form', |
                     :autocorrect => 'off', |
                     :autocapitalize => 'off' }) do |product_form|

  - if @product.errors.any?
    = render 'shared/form_errors', :target => @product

  %div
    %fieldset
      - if edit_view
        = product_form.label :name, (form_label(:name))
      = product_form.text_field :name, :placeholder => (form_label(:name))

    %fieldset
      - if edit_view
        = product_form.label :description, (form_label(:description))
      = product_form.text_area :description, |
                               :placeholder => (form_label(:description)),
                               :rows => 5

    %fieldset
      - price_label = (form_label(:price, true, ' (e.g. 9.99)'))
      - if edit_view
        = product_form.label :price, price_label
      = product_form.text_field :price, :type => 'text', |
                                :placeholder => price_label

    %fieldset
      - quantity_placeholder = form_label(:quantity, false)
      - quantity_disabled = @product.unlimited_quantity ? 'disabled' : nil
      - quantity_value = @product.quantity.nil? || @product.quantity == 0 ? nil : @product.quantity
      - if edit_view
        = product_form.label :quantity, (form_label(:quantity, false))
      = product_form.text_field :quantity, :type => tel_input, |
                                           :value => quantity_value, |
                                           :disabled => quantity_disabled, |
                                           :placeholder => quantity_placeholder

      %span.inline-help
        *Quantity is required unless Unlimited Quantity has been selected.
    %fieldset.checkbox
      = product_form.label :unlimited_quantity, |
        (form_label(:unlimited_quantity, false))
      = product_form.check_box :unlimited_quantity

    - color_placeholder = (form_label("#{:color}", false, ' - input and tap +'))
    - if edit_view
      = render 'products/nested_attribute_fieldset', |
        { :locals => { :attribute => 'color', |
          :collection => @product.colors, |
          :placeholder => color_placeholder }}
    - else
      = product_form.fields_for(:colors) do |colors_form|
        %fieldset
          = colors_form.text_field :color, :class => 'width-90', |
                                           :placeholder => color_placeholder
          %button.add-button{ :data => { :attribute => :color.to_s} } +
          %div.attrs

    - size_placeholder = (form_label("#{:size}", false, ' - input and tap +'))
    - if edit_view
      = render 'products/nested_attribute_fieldset', |
        { :locals => { :attribute => 'size', |
          :collection => @product.sizes ||= nil, |
          :placeholder => size_placeholder }}
    - else
      = product_form.fields_for(:sizes) do |sizes_form|
        %fieldset
          = sizes_form.text_field :size, :class => 'width-90', |
                                           :placeholder => size_placeholder
          %button.add-button{ :data => { :attribute => :size.to_s} } +
          %div.attrs

    %fieldset
      - flatrate_shipping_label = form_label('Flatrate Shipping Price', false, ' (e.g. 9.99)')
      - if edit_view
        = product_form.label :flatrate_shipping_cost, flatrate_shipping_label
      = product_form.text_field :flatrate_shipping_cost, |
                                :type => 'text',
                                :placeholder => flatrate_shipping_label

    %fieldset
      = product_form.label :status, (form_label(:status))
      = product_form.select :status,
                            options_for_select(Product.order_status_array,
                                               @product.status ||= 'Active')

    = render 'product_images', locals: { edit_view: edit_view,
      form: product_form,
      product_images: @product.get_product_images,
      username: @user.username }

    %fieldset#product_form_submit_button_wrapper.hide
      = product_form.submit verb_and_product, :class => 'btn btn-large btn-primary'

